colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
piclist[[j]] <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
}
#extract legend
#https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(piclist[[1]])
grid.arrange(arrangeGrob(piclist[[1]]  + theme(legend.position="none"),
piclist[[2]]  + theme(legend.position="none"),
piclist[[3]]  + theme(legend.position="none"),
piclist[[4]]  + theme(legend.position="none"),
nrow=2),
mylegend, nrow=2,heights=c(10, 1))
load("fitlists.rdata");fitlists <- fitlist
load("fitlist.rdata")
length(fitlist);length(fitlists)
for( i in 1:length(fitlists) ){ fitlist[[i+length(fitlists)]] <- fitlists[[i]] }
require(ggplot2)
library("reshape2")
library(gridExtra)
#
# OPTdat <- data.frame(
#   c(unname(unlist( OPT_List[[1]]$metrics )),unname(unlist( OPT_List[[2]]$metrics )),unname(unlist( OPT_List[[3]]$metrics ))),
#   rep( c( rep("Acc", 15), rep("Loss",15), rep("Val_Acc", 15), rep("Val_loss", 15) ), 3 ),
#   c( rep(OPT_List[[1]]$OPT,15), rep(OPT_List[[2]]$OPT,15) ,  rep(OPT_List[[3]]$OPT,15))
# )
#
# colnames(OPTdat) <- c("value","type", "opt")
# OPTdat$epoch <- rep(1:15,3)
# head(OPTdat)
#
# opts <- c( rep("adam",1), rep("rmsprop",1) ,  rep("adagrad",1))
# for( i in 4:length(fitlist)){opts[i] <- fitlist[[i]]$OPT}
#
optlist  <- list()
for( i in 1:length(fitlist)){
optdat <- do.call(rbind.data.frame, fitlist[[i]]$metrics)
optdat <- t(optdat); rownames(optdat) <- NULL
optdat <- as.data.frame(optdat); colnames(optdat) <- names(fitlist[[i]]$metrics)
optdat$epoch <- 1:10
optlist[[i]] <- optdat
}
optlist
source("multiplot.R")
piclist <- list()
titles <- c("Accuracy", "Loss", "Validation Accuracy", "Validation Loss")
for( j in 1:4){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
piclist[[j]] <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
}
# OPTdat <- data.frame(
#   c(unname(unlist( OPT_List[[1]]$metrics )),unname(unlist( OPT_List[[2]]$metrics )),unname(unlist( OPT_List[[3]]$metrics ))),
#   rep( c( rep("Acc", 15), rep("Loss",15), rep("Val_Acc", 15), rep("Val_loss", 15) ), 3 ),
#   c( rep(OPT_List[[1]]$OPT,15), rep(OPT_List[[2]]$OPT,15) ,  rep(OPT_List[[3]]$OPT,15))
# )
#
# colnames(OPTdat) <- c("value","type", "opt")
# OPTdat$epoch <- rep(1:15,3)
# head(OPTdat)
#
opts <- c( rep("adam",1), rep("rmsprop",1) ,  rep("adagrad",1))
source("multiplot.R")
piclist <- list()
titles <- c("Accuracy", "Loss", "Validation Accuracy", "Validation Loss")
for( j in 1:4){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
piclist[[j]] <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
}
piclist[[j]]
optlist
# OPTdat <- data.frame(
#   c(unname(unlist( OPT_List[[1]]$metrics )),unname(unlist( OPT_List[[2]]$metrics )),unname(unlist( OPT_List[[3]]$metrics ))),
#   rep( c( rep("Acc", 15), rep("Loss",15), rep("Val_Acc", 15), rep("Val_loss", 15) ), 3 ),
#   c( rep(OPT_List[[1]]$OPT,15), rep(OPT_List[[2]]$OPT,15) ,  rep(OPT_List[[3]]$OPT,15))
# )
#
# colnames(OPTdat) <- c("value","type", "opt")
# OPTdat$epoch <- rep(1:15,3)
# head(OPTdat)
#
opts <- c( rep("adam",1), rep("rmsprop",1) ,  rep("adagrad",1))
for( i in 4:length(fitlist)){opts[i] <- fitlist[[i]]$OPT}
optlist  <- list()
for( i in 1:length(fitlist)){
optdat <- do.call(rbind.data.frame, fitlist[[i]]$metrics)
optdat <- t(optdat); rownames(optdat) <- NULL
optdat <- as.data.frame(optdat); colnames(optdat) <- names(fitlist[[i]]$metrics)
optdat$epoch <- 1:10
optlist[[i]] <- optdat
}
optdat <- do.call(rbind,optlist)
#
# test_data <-
#   data.frame(
#     var0 = 100 + c(0, cumsum(runif(49, -20, 20))),
#     var1 = 150 + c(0, cumsum(runif(49, -10, 10))),
#     date = seq(as.Date("2002-01-01"), by="1 month", length.out=100)
#   )
source("multiplot.R")
piclist <- list()
titles <- c("Accuracy", "Loss", "Validation Accuracy", "Validation Loss")
for( j in 1:4){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
piclist[[j]] <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
}
piclist[[j]]
piclist[[1]]
j = 2
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
optlist
optlist[[k]][,Met]
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACC
1
for( j in 1:4){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
piclist[[j]] <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
}
ACC
piclist[[1]]
piclist[[2]]
piclist[[3]]
ACC
j = 1
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
piclist[[j]] <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
ACC
j = 2
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACC
j = 1
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACC
piclist <- list()
titles <- c("Accuracy", "Loss", "Validation Accuracy", "Validation Loss")
for( j in 1:4){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACC
p <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
piclist[[j]] <- p
}
piclist[[3]]
piclist[[1]]
j = 1
Met <- j
Met
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACC
p <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
p
piclist <- list()
titles <- c("Accuracy", "Loss", "Validation Accuracy", "Validation Loss")
for( j in 1:4){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACC
p <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
nam <- paste("P", j, sep = "")
piclist[[j]] <- assign(nam, p)
}
piclist[[1]]
piclist[[2]]
nam
P4
P1
source("multiplot.R")
piclist <- list()
titles <- c("Accuracy", "Loss", "Validation Accuracy", "Validation Loss")
for( j in 1){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACC
p <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
nam <- paste("P", j, sep = "")
assign(nam, p)
}
P1
for( j in 1:2){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACC
p <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
nam <- paste("P", j, sep = "")
assign(nam, p)
}
P1
P2
for( j in 1:2){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACC
p <- ggplot(data=ACC, aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
nam <- paste("P", j, sep = "")
assign(nam, p)
rm(p)
}
P1
P2
piclist <- ACCs <- list()
for( j in 1:2){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACCs[[j]] <- ACC
}
p1 <- ggplot(data=ACCs[[1]], aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
p1
p1 <- ggplot(data=ACCs[[2]], aes(x=epoch, y=ACC[,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
p1
ACCs[[2]]
ACCs[[1]]
p1 <- ggplot(data=ACCs[[2]], aes(x=epoch, y=ACCs[[2]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
p1
ggplot(data=ACCs[[1]], aes(x=epoch, y=ACCs[[2]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
ACCs[[1]]
ACC
k = 1
ggplot(data=ACCs[[k]], aes(x=epoch, y=ACCs[[k]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
k = 2
ggplot(data=ACCs[[k]], aes(x=epoch, y=ACCs[[k]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
piclist <- ACCs <- list()
titles <- c("Accuracy", "Loss", "Validation Accuracy", "Validation Loss")
for( j in 1:4){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACCs[[j]] <- ACC
piclist[[j]] <- ggplot(data=ACCs[[j]], aes(x=epoch, y=ACCs[[j]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
}
piclist[[j]]
#extract legend
#https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(piclist[[1]])
grid.arrange(arrangeGrob(piclist[[1]]  + theme(legend.position="none"),
piclist[[2]]  + theme(legend.position="none"),
piclist[[3]]  + theme(legend.position="none"),
piclist[[4]]  + theme(legend.position="none"),
nrow=2),
mylegend, nrow=2,heights=c(10, 1))
piclist[[1]]
piclist[[2]]
piclist[[3]]
for( j in 1:4){
Met <- j
ACC <- data.frame( rep(NA,nrow(optlist[[1]]) ) )
for(k in 1:length(fitlist)){ ACC[,k] <-  optlist[[k]][,Met] }
colnames(ACC) <- opts
ACC$epoch <- 1:nrow(ACC);
ACC <- melt(ACC, id="epoch")  # convert to long format
colnames(ACC)[3] <- colnames(optlist[[1]])[Met]
ACC[,2] <- as.character( ACC[,2]); ACC[,2] <- paste0( ACC[,2], "  ")
ACCs[[j]] <- ACC
}
j = 1
p1 <- ggplot(data=ACCs[[j]], aes(x=epoch, y=ACCs[[j]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
p1
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(piclist[[1]])
grid.arrange(arrangeGrob(p1  + theme(legend.position="none"),
p2  + theme(legend.position="none"),
p3  + theme(legend.position="none"),
p4  + theme(legend.position="none"),
nrow=2),
mylegend, nrow=2,heights=c(10, 1))
j = 1
p1 <- ggplot(data=ACCs[[j]], aes(x=epoch, y=ACCs[[j]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
j = 2
p2 <- ggplot(data=ACCs[[j]], aes(x=epoch, y=ACCs[[j]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
j = 3
p3 <- ggplot(data=ACCs[[j]], aes(x=epoch, y=ACCs[[j]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
j = 4
p4 <- ggplot(data=ACCs[[j]], aes(x=epoch, y=ACCs[[j]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
#extract legend
#https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(piclist[[1]])
grid.arrange(arrangeGrob(p1  + theme(legend.position="none"),
p2  + theme(legend.position="none"),
p3  + theme(legend.position="none"),
p4  + theme(legend.position="none"),
nrow=2),
mylegend, nrow=2,heights=c(10, 1))
j = 1
p1 <- ggplot(data=ACCs[[j]], aes(x=epoch, y=ACCs[[j]][,3], colour=variable)) +
geom_line( lwd = 1) + ylab(colnames(ACC)[3]) +  geom_point() +
ggtitle( titles[j] ) + guides(col = guide_legend(ncol = 6)) +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom", axis.title.x=element_blank(),
legend.title = element_blank())
p1
p2
p1
p2
p3
